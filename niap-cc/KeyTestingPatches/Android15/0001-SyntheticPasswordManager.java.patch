--- SyntheticPasswordManager.java	2023-10-02 05:35:22.189541116 +0000
+++ SyntheticPasswordManager.java.patched	2023-09-29 02:55:56.394865625 +0000
@@ -44,6 +44,7 @@ import android.service.gatekeeper.IGateK
 import android.text.TextUtils;
 import android.util.ArrayMap;
 import android.util.ArraySet;
+import android.util.Log;
 import android.util.Slog;
 
 import com.android.internal.annotations.VisibleForTesting;
@@ -225,8 +226,20 @@ class SyntheticPasswordManager {
          */
         private byte[] deriveSubkey(byte[] personalization) {
             if (mVersion == SYNTHETIC_PASSWORD_VERSION_V3) {
-                return (new SP800Derive(mSyntheticPassword))
-                    .withContext(personalization, PERSONALIZATION_CONTEXT);
+
+                StringBuilder logMessage = new StringBuilder();
+                logMessage.append("DO NOT SUBMIT derivePassword");
+                logMessage.append(" personalization: ");
+                logMessage.append(SyntheticPasswordCrypto.bytesToHex(personalization));
+                logMessage.append(" context: ");
+                logMessage.append(SyntheticPasswordCrypto.bytesToHex(PERSONALIZATION_CONTEXT));
+                byte[] res = (new SP800Derive(mSyntheticPassword))
+                        .withContext(personalization, PERSONALIZATION_CONTEXT);
+                logMessage.append(" result: ");
+                logMessage.append(SyntheticPasswordCrypto.bytesToHex(res));
+                Log.e(TAG, logMessage.toString());
+
+                return res;
             } else {
                 return SyntheticPasswordCrypto.personalizedHash(personalization,
                         mSyntheticPassword);
@@ -234,7 +247,8 @@ class SyntheticPasswordManager {
         }
 
         public byte[] deriveKeyStorePassword() {
-            return bytesToHex(deriveSubkey(PERSONALIZATION_KEY_STORE_PASSWORD));
+            return SyntheticPasswordCrypto.bytesToHexBytes(
+                    deriveSubkey(PERSONALIZATION_KEY_STORE_PASSWORD));
         }
 
         public byte[] deriveGkPassword() {
@@ -926,6 +940,8 @@ class SyntheticPasswordManager {
         PasswordData pwd = credential.isNone() ? null :
                 PasswordData.create(credential.getType(), pinLength);
         byte[] stretchedLskf = stretchLskf(credential, pwd);
+        String hexPwdToken = String.valueOf(HexEncoding.encode(stretchedLskf));
+        Log.i(TAG, "CKM.4.1 pwdToken " + hexPwdToken);
         long sid = GateKeeper.INVALID_SECURE_USER_ID;
         final byte[] protectorSecret;
 
@@ -1476,6 +1492,9 @@ class SyntheticPasswordManager {
 
     private SyntheticPassword unwrapSyntheticPasswordBlob(long protectorId,
             byte expectedProtectorType, byte[] protectorSecret, long sid, int userId) {
+        String hexApplicationId = String.valueOf(HexEncoding.encode(protectorSecret));
+        Log.i(TAG, "CKM.4.2 protectorSecret " + hexApplicationId);
+
         byte[] data = loadState(SP_BLOB_NAME, protectorId, userId);
         if (data == null) {
             return null;
@@ -1510,6 +1529,8 @@ class SyntheticPasswordManager {
             }
             result.recreateFromEscrow(spSecret);
         } else {
+            String hexSyntheticPassword = String.valueOf(HexEncoding.encode(spSecret));
+            Log.i(TAG, "CKM.4.3 synthetic password " + hexSyntheticPassword);
             result.recreateDirectly(spSecret);
         }
         if (blob.mVersion == SYNTHETIC_PASSWORD_VERSION_V1) {
