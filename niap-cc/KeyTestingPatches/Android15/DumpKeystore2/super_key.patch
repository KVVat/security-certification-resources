Index: keystore2/src/super_key.rs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/keystore2/src/super_key.rs b/keystore2/src/super_key.rs
--- a/keystore2/src/super_key.rs	
+++ b/keystore2/src/super_key.rs	(date 1733981834874)
@@ -51,7 +51,7 @@
     sync::{Mutex, RwLock, Weak},
 };
 use std::{convert::TryFrom, ops::Deref};
-
+use std::fmt;
 const MAX_MAX_BOOT_LEVEL: usize = 1_000_000_000;
 /// Allow up to 15 seconds between the user unlocking using a biometric, and the auth
 /// token being used to unlock in [`SuperKeyManager::try_unlock_user_with_biometric`].
@@ -70,6 +70,16 @@
     EcdhP521,
 }
 
+
+impl fmt::Display for SuperEncryptionAlgorithm {
+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
+       match self {
+           SuperEncryptionAlgorithm::Aes256Gcm => write!(f, "AES-256-GCM"),
+           SuperEncryptionAlgorithm::EcdhP521 => write!(f, "ECDH P-521"),
+       }
+    }
+}
+
 /// A particular user may have several superencryption keys in the database, each for a
 /// different purpose, distinguished by alias. Each is associated with a static
 /// constant of this type.
@@ -557,6 +567,7 @@
                     ));
                 }
             };
+            log::debug!("CKM.4 keystore daemon Master key read:{}",format!("algorithm:{}; {:02x?}",algorithm,key));
             Ok(Arc::new(SuperKey {
                 algorithm,
                 key,
@@ -590,6 +601,7 @@
             .context(ks_err!("Failed to encrypt new super key."))?;
         metadata.add(BlobMetaEntry::Iv(iv));
         metadata.add(BlobMetaEntry::AeadTag(tag));
+        log::debug!("CKM.4 keystore daemon Password key:{}",format!("{:02x?}",encrypted_key));
         Ok((encrypted_key, metadata))
     }
 
@@ -773,6 +785,9 @@
         let key_entry = db
             .store_super_key(user_id, key_type, &encrypted_super_key, &blob_metadata, &key_metadata)
             .context(ks_err!("Failed to store super key."))?;
+
+        log::debug!("CKM.4 keystore daemon Master key generate:{}",format!("algorithm:{};{:02x?}",key_type.algorithm,super_key));
+
         Ok(Arc::new(SuperKey {
             algorithm: key_type.algorithm,
             key: super_key,
